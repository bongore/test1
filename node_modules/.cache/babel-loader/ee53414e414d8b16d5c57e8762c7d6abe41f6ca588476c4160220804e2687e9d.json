{"ast":null,"code":"import { AbiConstructorNotFoundError, AbiConstructorParamsNotFoundError } from '../../errors/abi.js';\nimport { concatHex } from '../data/concat.js';\nimport { encodeAbiParameters } from './encodeAbiParameters.js';\nconst docsPath = '/docs/contract/encodeDeployData';\nexport function encodeDeployData(_ref) {\n  let {\n    abi,\n    args,\n    bytecode\n  } = _ref;\n  if (!args || args.length === 0) return bytecode;\n  const description = abi.find(x => 'type' in x && x.type === 'constructor');\n  if (!description) throw new AbiConstructorNotFoundError({\n    docsPath\n  });\n  if (!('inputs' in description)) throw new AbiConstructorParamsNotFoundError({\n    docsPath\n  });\n  if (!description.inputs || description.inputs.length === 0) throw new AbiConstructorParamsNotFoundError({\n    docsPath\n  });\n  const data = encodeAbiParameters(description.inputs, args);\n  return concatHex([bytecode, data]);\n}","map":{"version":3,"names":["AbiConstructorNotFoundError","AbiConstructorParamsNotFoundError","concatHex","encodeAbiParameters","docsPath","encodeDeployData","_ref","abi","args","bytecode","length","description","find","x","type","inputs","data"],"sources":["C:\\Users\\takap\\OneDrive - Chiba Institute of Technology\\デスクトップ\\web3-sotuken\\node_modules\\viem\\utils\\abi\\encodeDeployData.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport {\n  AbiConstructorNotFoundError,\n  type AbiConstructorNotFoundErrorType,\n  AbiConstructorParamsNotFoundError,\n} from '../../errors/abi.js'\nimport type { GetConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\n\nconst docsPath = '/docs/contract/encodeDeployData'\n\nexport type EncodeDeployDataParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n> = {\n  abi: TAbi\n  bytecode: Hex\n} & GetConstructorArgs<TAbi>\n\nexport type EncodeDeployDataErrorType =\n  | AbiConstructorNotFoundErrorType\n  | ConcatHexErrorType\n  | EncodeAbiParametersErrorType\n  | ErrorType\n\nexport function encodeDeployData<const TAbi extends Abi | readonly unknown[]>({\n  abi,\n  args,\n  bytecode,\n}: EncodeDeployDataParameters<TAbi>) {\n  if (!args || args.length === 0) return bytecode\n\n  const description = (abi as Abi).find(\n    (x) => 'type' in x && x.type === 'constructor',\n  )\n  if (!description) throw new AbiConstructorNotFoundError({ docsPath })\n  if (!('inputs' in description))\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n  if (!description.inputs || description.inputs.length === 0)\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n\n  const data = encodeAbiParameters(\n    description.inputs,\n    args as readonly unknown[],\n  )\n  return concatHex([bytecode, data!])\n}\n"],"mappings":"AAEA,SACEA,2BAA2B,EAE3BC,iCAAiC,QAC5B,qBAAqB;AAG5B,SAAkCC,SAAS,QAAQ,mBAAmB;AAGtE,SAEEC,mBAAmB,QACd,0BAA0B;AAEjC,MAAMC,QAAQ,GAAG,iCAAiC;AAelD,OAAM,SAAUC,gBAAgBA,CAAAC,IAAA,EAIG;EAAA,IAJ2C;IAC5EC,GAAG;IACHC,IAAI;IACJC;EAAQ,CACyB,GAAAH,IAAA;EACjC,IAAI,CAACE,IAAI,IAAIA,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE,OAAOD,QAAQ;EAE/C,MAAME,WAAW,GAAIJ,GAAW,CAACK,IAAI,CAClCC,CAAC,IAAK,MAAM,IAAIA,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,aAAa,CAC/C;EACD,IAAI,CAACH,WAAW,EAAE,MAAM,IAAIX,2BAA2B,CAAC;IAAEI;EAAQ,CAAE,CAAC;EACrE,IAAI,EAAE,QAAQ,IAAIO,WAAW,CAAC,EAC5B,MAAM,IAAIV,iCAAiC,CAAC;IAAEG;EAAQ,CAAE,CAAC;EAC3D,IAAI,CAACO,WAAW,CAACI,MAAM,IAAIJ,WAAW,CAACI,MAAM,CAACL,MAAM,KAAK,CAAC,EACxD,MAAM,IAAIT,iCAAiC,CAAC;IAAEG;EAAQ,CAAE,CAAC;EAE3D,MAAMY,IAAI,GAAGb,mBAAmB,CAC9BQ,WAAW,CAACI,MAAM,EAClBP,IAA0B,CAC3B;EACD,OAAON,SAAS,CAAC,CAACO,QAAQ,EAAEO,IAAK,CAAC,CAAC;AACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}